#include "token.h"
#include "myStack.h"
#include "queueAsArray.h"

void getPostfixEvaluation(stackType<Token>& inpStack);

void getPostfixExpression(stackType<Token>& stack, queueType<Token>& NewQueue){
Token t;
while (!NewQueue.isEmptyQueue()){
	t=NewQueue.front();
	if(t.IsOperand()){
		stack.push(t);
		NewQueue.deleteQueue();
	}
	else if(t.IsOperator()){
		stack.push(t);
		NewQueue.deleteQueue();
		getPostfixEvaluation(stack);
	}

}

}