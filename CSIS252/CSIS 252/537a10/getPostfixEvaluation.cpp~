#include "token.h"
#include "myStack.h"

void getPostfixEvaluation(stackType<Token>& inpStack){
	Token tmpToken[3];
	int i=0;
	while(i<=2 && !inpStack.isEmptyStack()){
		tmpToken[i]=inpStack.top();
		inpStack.pop();
		i++;
	};
	switch (tmpToken[0].Operator())
   	{
		case '+' : inpStack.push(tmpToken[2]+tmpToken[1]); break;
      		case '-' : inpStack.push(tmpToken[2]-tmpToken[1]); break;
      		case '*' : inpStack.push(tmpToken[2]*tmpToken[1]); break;
      		case '/' : inpStack.push(tmpToken[2]/tmpToken[1]); break;
      		case '%' : inpStack.push(tmpToken[2]%tmpToken[1]); break;
      		case '^' : inpStack.push(tmpToken[2]^tmpToken[1]); break;
	};

}